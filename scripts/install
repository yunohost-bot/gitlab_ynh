#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression "Validating installation parameters..."

config_path=/etc/$app

# Detect the system architecture
if [ -n "$(uname -m | grep arm64)" ] || [ -n "$(uname -m | grep aarch64)" ]; then
	architecture="arm64"
elif [ -n "$(uname -m | grep x86_64)" ]; then
	architecture="x86-64"
elif [ -n "$(uname -m | grep 86)" ]; then
	ynh_die "Gitlab is not compatible with x86 architecture"
elif [ -n "$(uname -m | grep arm)" ]; then
	architecture="arm"
else
	ynh_die "Unable to detect your achitecture, please open a bug describing \
        your hardware and the result of the command \"uname -m\"." 1
fi

# Could be an option?
client_max_body_size="250m"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression "Storing installation settings..."

ynh_app_setting_set --key=architecture --value=$architecture
ynh_app_setting_set --key=client_max_body_size --value=$client_max_body_size
ynh_app_setting_set --key=overwrite_nginx --value="1"

#=================================================
# ADD SWAP IF NEEDED
#=================================================

total_ram=$(ynh_get_ram --total)
swap_needed=0

# https://docs.gitlab.com/ce/install/requirements.html#memory
# Need at least 2Go of swap
if [ $total_ram -lt 4096 ]; then
	swap_needed=2048
fi

if [ $swap_needed -gt 0 ]; then
	ynh_script_progression "Adding $swap_needed Mo to swap..."
	if ! ynh_add_swap --size=$swap_needed; then
		ynh_print_warn "Please add $swap_needed Mo to swap to make GitLab work properly"
	fi
fi

#=================================================
# CHECK IF KERNEL IS READ-ONLY
#=================================================

modify_kernel_parameters="true"

for value_to_check in "kernel.shmall" "kernel.shmmax" "kernel.sem" "net.core.somaxconn"
do
	if ! sysctl --write $value_to_check="$(sysctl --value $value_to_check)"; then
		modify_kernel_parameters="false"
		break
	fi
done

#=================================================
# PRECONFIGURE GITLAB
#=================================================
ynh_script_progression "Preconfigure GitLab..."

mkdir -p $config_path

touch "$config_path/gitlab-persistent.rb"
chown root:root "$config_path/gitlab-persistent.rb"
chmod 640 "$config_path/gitlab-persistent.rb"

ssh_port=$(grep -P "Port\s+\d+" /etc/ssh/sshd_config | grep -P -o "\d+")

generated_external_url="https://$domain${path%/}"

ynh_config_add --template="$YNH_APP_BASEDIR/conf/gitlab.rb" --destination="$config_path/gitlab.rb"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

source $YNH_APP_BASEDIR/scripts/upgrade.d/upgrade.last.sh
ynh_config_add --template="$YNH_APP_BASEDIR/conf/$architecture.src.default" --destination="$YNH_APP_BASEDIR/conf/$architecture.src"

tempdir="$(mktemp -d)"

ynh_setup_source --dest_dir=$tempdir --source_id=$architecture

chmod 755 $install_dir
# https://docs.gitlab.com/omnibus/settings/configuration.html#specify-the-external-url-at-the-time-of-installation
EXTERNAL_URL="$generated_external_url" ynh_hide_warnings dpkg -i $tempdir/$gitlab_filename

ynh_safe_rm "$tempdir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Configuring NGINX web server..."

# Create a dedicated NGINX config
ynh_config_add_nginx client_max_body_size

#=================================================
# SPECIFIC SETUP
#=================================================
# ADD USER AND CONFIGURE SIGN IN SYSTEM
#=================================================
ynh_script_progression "Creating an administrator user..."

mailAdmin=$(ynh_user_get_info --username=$admin --key=mail)
fullnameAdmin=$(ynh_user_get_info --username=$admin --key=fullname)
rdmPass=$(ynh_string_random --length=30)

gitlab-rails runner "newuser = User.new(username: \"$admin\", email: \"$mailAdmin\", name: \"$fullnameAdmin\", password: \"$rdmPass\", admin: true, skip_confirmation: true);\
        newuser.assign_personal_namespace(Organizations::Organization.default_organization);\
        newuser.save!;\
        ApplicationSetting.last.update(password_authentication_enabled_for_web: $use_web_account, signup_enabled: $use_web_account);"

#=================================================
# RECONFIGURE TO TAKE INTO ACCOUNT CHANGES
#=================================================
ynh_script_progression "Reconfigure GitLab..."

ynh_hide_warnings gitlab-ctl reconfigure

# Allow ssh for git
usermod -a -G "ssh.app" "git"

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add "gitlab-runsvdir" --log "/var/log/$app/gitlab-rails/application.log" "/var/log/$app/gitlab-rails/api_json.log" "/var/log/$app/gitlab-rails/production.log" "/var/log/$app/gitlab-rails/production_json.log" "/var/log/$app/gitlab-rails/sidekiq.log" "/var/log/$app/puma/puma_stderr.log" "/var/log/$app/puma/current" "/var/log/$app/alertmanager/current" "/var/log/$app/gitaly/current" "/var/log/$app/gitlab-monitor/current" "/var/log/$app/gitlab-shell/gitlab-shell.log" "/var/log/$app/gitlab-workhorse/current" "/var/log/$app/logrotate/current" "/var/log/$app/nginx/current" "/var/log/$app/nginx/access.log" "/var/log/$app/nginx/error.log" "/var/log/$app/nginx/gitlab_access.log" "/var/log/$app/nginx/gitlab_error.log" "/var/log/$app/node-exporter/current" "/var/log/$app/postgres-exporter/current" "/var/log/$app/postgresql/current" "/var/log/$app/prometheus/current" "/var/log/$app/redis/current" "/var/log/$app/redis-exporter/current"

#=================================================
# RELOAD NGINX
#=================================================

ynh_systemctl --action=reload --service=nginx

#=================================================
# RESTART GITLAB
#=================================================
ynh_script_progression "Restarting GitLab..."

ynh_systemctl --action=restart --service="gitlab-runsvdir" --log_path="/var/log/$app/puma/current" --wait_until="Listening on http://127.0.0.1:$port_puma" --timeout=300

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of GitLab completed"
